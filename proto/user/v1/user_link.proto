syntax = "proto3";

package user.v1;

import "buf/validate/validate.proto";
import "common/v1/direct_upload_url.proto";

message UserLinkProvider {
  string type = 1 [(buf.validate.field).string.min_len = 1];
  int32 display_order = 2 [(buf.validate.field).int32.gte = 0];
}

message UserLinkDisplayAttribute {
  string user_link_id = 1 [(buf.validate.field).string.len = 26];
  string name = 2 [(buf.validate.field).string.max_len = 256];
  int32 display_order = 3 [(buf.validate.field).int32.gte = 0];
}

message UserLink {
  string id = 1 [(buf.validate.field).string.len = 26];
  string user_id = 2 [(buf.validate.field).string.len = 26];
  string uri = 3 [(buf.validate.field).string.uri = true];
  string provider_type = 4;
  UserLinkDisplayAttribute display_attribute = 5;
  optional string qr_code_url = 6;
}

message ListUserLinkRequest {
  string user_id = 1 [(buf.validate.field).string.len = 26];
}

message ListUserLinkResponse {
  repeated UserLink links = 1;
}

message CreateUserLinkRequest {
  string provider_type = 1 [(buf.validate.field).string.min_len = 1];
  string uri = 2 [(buf.validate.field).string.uri = true];
  string name = 3 [(buf.validate.field).string.max_len = 256];
  optional common.v1.S3Object qr_code = 4;
}

message CreateUserLinkResponse {}

message UpdateUserLinkRequest {
  string id = 1 [(buf.validate.field).string.len = 26];
  optional string provider_type = 2 [(buf.validate.field).string.min_len = 1];
  optional string uri = 3 [(buf.validate.field).string.uri = true];
  optional string name = 4 [(buf.validate.field).string.max_len = 256];
}


message UpdateUserLinkResponse {}

message UpdateUserLinkQRCodeRequest {
  string id = 1 [(buf.validate.field).string.len = 26];
  optional common.v1.S3Object qr_code = 2;
}

message UpdateUserLinkQRCodeResponse {}

message DeleteUserLinkRequest {
  string id = 1 [(buf.validate.field).string.len = 26];
}

message DeleteUserLinkResponse {}

service UserLinkService {
  rpc ListUserLink(ListUserLinkRequest) returns (ListUserLinkResponse) {}
  rpc CreateUserLink(CreateUserLinkRequest) returns (CreateUserLinkResponse) {}
  rpc UpdateUserLink(UpdateUserLinkRequest) returns (UpdateUserLinkResponse) {}
  rpc UpdateUserLinkQRCode(UpdateUserLinkQRCodeRequest) returns (UpdateUserLinkQRCodeResponse) {}
  rpc DeleteUserLink(DeleteUserLinkRequest) returns (DeleteUserLinkResponse) {}
}
