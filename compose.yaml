services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        MAIN_GO_FILE: /src/cmd/api/main.go
        BIN_NAME: api
        GH_PAT: ${GH_PAT}
    environment:
      - GH_PAT=${GH_PAT}
    env_file:
      - .env.docker
    volumes:
      - ./backend:/src:delegated
      - ./log:/var/log:delegated
      - /src/build
      - go:/go
    ports:
      - "8080:8080"
    networks:
      default:

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development-dependencies-env
    environment:
      PUBLIC_API_BASE_URL: http://api:8080
      PUBLIC_BUCKET_NAME: sampay-public
      SESSION_SECRET: secret
    command: sh -c "npm ci && npm run dev"
    volumes:
      - ./frontend:/src:delegated
      - ./log:/var/log:delegated
      - /src/build
      - node_modules:/src/node_modules
    ports:
      - "5173:5173"
    networks:
      default:

  postgres:
    image: postgres:16.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      PGUSER: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: Asia/Tokyo
      DB_NAME: sampay
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost" ]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:7.0.15-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: password
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

  localstack:
    build:
      context: ./localstack
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4510-4559:4510-4559"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - LS_LOG=error
      - HOSTNAME_EXTERNAL=localstack
    volumes:
      - ./localstack/volume:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack/init.sh:/etc/localstack/init/ready.d/init-aws.sh
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/_localstack/health" ]
    networks:
      default:
        ipv4_address: 10.0.2.20

  cloudfront:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./cloudfront/nginx.conf:/etc/nginx/nginx.conf
      - ./cloudfront/default.conf:/etc/nginx/conf.d/default.conf
    dns:
      - 10.0.2.20
    networks:
      default:

networks:
  default:
    ipam:
      config:
        - subnet: 10.0.2.0/24

volumes:
  go:
  node_modules:
  postgres:
  redis:
