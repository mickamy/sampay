services:
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      args:
        MAIN_GO_FILE: /src/cmd/api/main.go
        BIN_NAME: api
    env_file:
      - .env.docker
    volumes:
      - ./backend:/src:delegated
      - /src/build
      - go:/go
    ports:
      - "8080:8080"

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development-dependencies-env
    environment:
      PUBLIC_API_BASE_URL: http://api:8080/api
      SESSION_SECRET: secret
    command: npm run dev
    volumes:
      - ./frontend:/app:delegated
      - /app/build
      - node_modules:/app/node_modules
    ports:
      - "5173:5173"

  postgres:
    image: postgres:16.4-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
      PGUSER: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
      TZ: Asia/Tokyo
      DB_NAME: sampay
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost" ]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./backend/db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:7.0.15-alpine
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: password
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30

volumes:
  go:
  node_modules:
  postgres:
  redis:
