package i18n

// Code generated by generate.go; DO NOT EDIT.

type MessageID string

func (id MessageID) String() string { return string(id) }

const (
	AuthUsecaseErrorInvalid_access_refresh_token                               MessageID = "auth.usecase.error.invalid_access_refresh_token"
	AuthUsecaseErrorInvalid_email_password                                     MessageID = "auth.usecase.error.invalid_email_password"
	AuthUsecaseErrorInvalid_refresh_token                                      MessageID = "auth.usecase.error.invalid_refresh_token"
	CommonFormatMinute                                                         MessageID = "common.format.minute"
	CommonHandlerDirect_upload_urlErrorInvalid_s3_object                       MessageID = "common.handler.direct_upload_url.error.invalid_s3_object"
	CommonHandlerErrorInternal                                                 MessageID = "common.handler.error.internal"
	RegistrationEmailRequest_email_verificationBody                            MessageID = "registration.email.request_email_verification.body"
	RegistrationEmailRequest_email_verificationHeader                          MessageID = "registration.email.request_email_verification.header"
	RegistrationEmailRequest_email_verificationTitle                           MessageID = "registration.email.request_email_verification.title"
	RegistrationUsecaseCommonErrorEmail_already_exists                         MessageID = "registration.usecase.common.error.email_already_exists"
	RegistrationUsecaseCreate_passwordErrorEmail_verification_already_consumed MessageID = "registration.usecase.create_password.error.email_verification_already_consumed"
	RegistrationUsecaseCreate_passwordErrorEmail_verification_invalid_token    MessageID = "registration.usecase.create_password.error.email_verification_invalid_token"
	RegistrationUsecaseVerify_emailErrorInvalid_pin_code                       MessageID = "registration.usecase.verify_email.error.invalid_pin_code"
	UserHandlerUser_linkErrorInvalid_provider_type                             MessageID = "user.handler.user_link.error.invalid_provider_type"
	UserModelUser_attributeErrorDuplicated                                     MessageID = "user.model.user_attribute.error.duplicated"
	UserUsecaseGet_userErrorNot_found                                          MessageID = "user.usecase.get_user.error.not_found"
)
