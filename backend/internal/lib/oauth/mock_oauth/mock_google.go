// Code generated by MockGen. DO NOT EDIT.
// Source: google.go
//
// Generated by this command:
//
//	mockgen -source=google.go -destination=./mock_oauth/mock_google.go -package=mock_oauth
//

// Package mock_oauth is a generated GoMock package.
package mock_oauth

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	oauth "mickamy.com/sampay/internal/lib/oauth"
)

// MockGoogle is a mock of Google interface.
type MockGoogle struct {
	ctrl     *gomock.Controller
	recorder *MockGoogleMockRecorder
	isgomock struct{}
}

// MockGoogleMockRecorder is the mock recorder for MockGoogle.
type MockGoogleMockRecorder struct {
	mock *MockGoogle
}

// NewMockGoogle creates a new mock instance.
func NewMockGoogle(ctrl *gomock.Controller) *MockGoogle {
	mock := &MockGoogle{ctrl: ctrl}
	mock.recorder = &MockGoogleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoogle) EXPECT() *MockGoogleMockRecorder {
	return m.recorder
}

// AuthenticationURL mocks base method.
func (m *MockGoogle) AuthenticationURL() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticationURL")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthenticationURL indicates an expected call of AuthenticationURL.
func (mr *MockGoogleMockRecorder) AuthenticationURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticationURL", reflect.TypeOf((*MockGoogle)(nil).AuthenticationURL))
}

// Validate mocks base method.
func (m *MockGoogle) Validate(ctx context.Context, code string) (*oauth.Payload, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, code)
	ret0, _ := ret[0].(*oauth.Payload)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Validate indicates an expected call of Validate.
func (mr *MockGoogleMockRecorder) Validate(ctx, code any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockGoogle)(nil).Validate), ctx, code)
}
